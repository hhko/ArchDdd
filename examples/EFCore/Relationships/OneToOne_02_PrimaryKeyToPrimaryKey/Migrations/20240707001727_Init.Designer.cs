// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OneToOne_02_PrimaryKeyToPrimaryKey;

#nullable disable

namespace OneToOne_02_PrimaryKeyToPrimaryKey.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240707001727_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("OneToOne_02_PrimaryKeyToPrimaryKey.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("OneToOne_02_PrimaryKeyToPrimaryKey.BlogHeader", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("BlogHeaders");
                });

            modelBuilder.Entity("OneToOne_02_PrimaryKeyToPrimaryKey.BlogHeader", b =>
                {
                    b.HasOne("OneToOne_02_PrimaryKeyToPrimaryKey.Blog", "Blog")
                        .WithOne("Header")
                        .HasForeignKey("OneToOne_02_PrimaryKeyToPrimaryKey.BlogHeader", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Blog");
                });

            modelBuilder.Entity("OneToOne_02_PrimaryKeyToPrimaryKey.Blog", b =>
                {
                    b.Navigation("Header");
                });
#pragma warning restore 612, 618
        }
    }
}
