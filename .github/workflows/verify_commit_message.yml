name: Verify Commit Message
on:
  push:
    branches: [ main ]
#   pull_request:
#     branches: [ main ]
#     types:
#       - opened
#       - synchronize
#       - edited
#       - reopened

jobs:
  commit-message:
    runs-on: ubuntu-20.04
    steps:
    - name: verify_commit_message
      run: |
        # if [[ "${{ github.event_name }}" == pull_request ]]; then
        #   commit_msg_header="${{ github.event.pull_request.title }}"
        # else
        #   # get first line of commit message
        #   commit_msg_header=`echo "${{ github.event.head_commit.message }}" | head -n 1`
        # fi
        commit_msg_header = `echo "${{ github.event.head_commit.message }}" | head -n 1`

        commit_msg_type_regex = 'feat|fix|refactor|style|test|docs|build|tool|chore|deps'
        commit_msg_scope_regex = '.{1,20}'
        commit_msg_subject_regex = '.{1,150}'
        commit_msg_regex = "^(${commit_msg_type_regex})(\(${commit_msg_scope_regex}\))?: (${commit_msg_subject_regex})\$"
        #merge_msg_regex="^Merge branch '.+' into .+\$"
        #full_regex="(${commit_msg_regex})|(${merge_msg_regex})"
        full_regex="${commit_msg_regex}"

        echo $commit_msg_header | grep -qP "$full_regex" || {
          echo "ERROR: 커밋 메시지 유효성 검사 실패"
          echo "현재 커밋 메시지:"
          echo "$commit_msg_header"
          echo
          echo "유효한 커밋 메시지 예:"
          echo '예 1: "feat(cli): 새 기능 추가"'
          echo '예 2: "fix(advanced-metrics): 버그 수정"'
          echo '예 3: "docs: README.md 업데이트"'
          echo
          echo "유효한 커밋 메시지 타입: $commit_msg_type_regex"
          echo "더 자세한 정보, .github/workflows/verify_commit_message.yaml"
          exit 1
        }